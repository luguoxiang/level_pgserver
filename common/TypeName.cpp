#include "SqlParser.tab.h"
const char* getTypeName(int type) {
	switch (type) {
	case NAME:
		return "NAME";
	case STRING:
		return "STRING";
	case BINARY:
		return "BINARY";
	case INTNUM:
		return "INTNUM";
	case DATE_VALUE:
		return "DATE_VALUE";
	case HINT_VALUE:
		return "HINT_VALUE";
	case BOOL:
		return "BOOL";
	case APPROXNUM:
		return "APPROXNUM";
	case NULLX:
		return "NULLX";
	case PARAM:
		return "PARAM";
	case ASSIGN:
		return "ASSIGN";
	case OR:
		return "OR";
	case XOR:
		return "XOR";
	case ANDOP:
		return "ANDOP";
	case REGEXP:
		return "REGEXP";
	case LIKE:
		return "LIKE";
	case IS:
		return "IS";
	case IN:
		return "IN";
	case NOT:
		return "NOT";
	case COMP_NE:
		return "COMP_NE";
	case COMP_GE:
		return "COMP_GE";
	case COMP_GT:
		return "COMP_GT";
	case COMP_EQ:
		return "COMP_EQ";
	case COMP_LT:
		return "COMP_LT";
	case COMP_LE:
		return "COMP_LE";
	case MOD:
		return "MOD";
	case UMINUS:
		return "UMINUS";
	case UPLUS:
		return "UPLUS";
	case DATA:
		return "DATA";
	case FIELDS:
		return "FIELDS";
	case INFILE:
		return "INFILE";
	case SHOW:
		return "SHOW";
	case TABLES:
		return "TABLES";
	case TERMINATED:
		return "TERMINATED";
	case WORKLOAD:
		return "WORKLOAD";
	case ERROR:
		return "ERROR";
	case ADD:
		return "ADD";
	case ALL:
		return "ALL";
	case AND:
		return "AND";
	case ANY:
		return "ANY";
	case AS:
		return "AS";
	case ASC:
		return "ASC";
	case BETWEEN:
		return "BETWEEN";
	case CHAR:
		return "CHAR";
	case CREATE:
		return "CREATE";
	case DATABASE:
		return "DATABASE";
	case DATE:
		return "DATE";
	case DATETIME:
		return "DATETIME";
	case DEFAULT:
		return "DEFAULT";
	case DELETE:
		return "DELETE";
	case DESC:
		return "DESC";
	case DISTINCT:
		return "DISTINCT";
	case FLOAT:
		return "FLOAT";
	case DOUBLE:
		return "DOUBLE";
	case DROP:
		return "DROP";
	case EXPLAIN:
		return "EXPLAIN";
	case FROM:
		return "FROM";
	case GROUP:
		return "GROUP";
	case HAVING:
		return "HAVING";
	case INSERT:
		return "INSERT";
	case INTEGER:
		return "INTEGER";
	case INTO:
		return "INTO";
	case LIMIT:
		return "LIMIT";
	case LOAD:
		return "LOAD";
	case ON:
		return "ON";
	case ORDER:
		return "ORDER";
	case SELECT:
		return "SELECT";
	case WHERE:
		return "WHERE";
	case BY:
		return "BY";
	case SMALLINT:
		return "SMALLINT";
	case TABLE:
		return "TABLE";
	case TO:
		return "TO";
	case UNION:
		return "UNION";
	case UNIQUE:
		return "UNIQUE";
	case UNSIGNED:
		return "UNSIGNED";
	case UPDATE:
		return "UPDATE";
	case SET:
		return "SET";
	case VALUES:
		return "VALUES";
	case VARCHAR:
		return "VARCHAR";
	case OFFSET:
		return "OFFSET";
	case NOT_IN:
		return "NOT_IN";
	case NOT_LIKE:
		return "NOT_LIKE";
	case ALL_ROW:
		return "ALL_ROW";
	case ALL_COLUMN:
		return "ALL_COLUMN";
	case PRIMARY_KEY:
		return "PRIMARY_KEY";
	case NOT_NULL:
		return "NOT_NULL";
	case KEY:
		return "KEY";
	case PRIMARY:
		return "PRIMARY";
	case IF:
		return "IF";
	case EXISTS:
		return "EXISTS";
	case IF_EXISTS:
		return "IF_EXISTS";
	case JOIN:
		return "JOIN";
	case LEFT:
		return "LEFT";
	case USING:
		return "USING";
	default:
		return 0;
	}
}
